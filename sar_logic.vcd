$date
	Mon Feb 19 21:29:57 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module sar_logic_tb $end
$var wire 8 ! sar [7:0] $end
$var wire 1 " s_clk_not $end
$var wire 1 # s_clk $end
$var wire 1 $ fine_switch_S_not $end
$var wire 1 % fine_switch_S $end
$var wire 9 & fine_sca2_top_not [8:0] $end
$var wire 9 ' fine_sca2_top [8:0] $end
$var wire 9 ( fine_sca2_btm_not [8:0] $end
$var wire 9 ) fine_sca2_btm [8:0] $end
$var wire 9 * fine_sca1_top_not [8:0] $end
$var wire 9 + fine_sca1_top [8:0] $end
$var wire 9 , fine_sca1_btm_not [8:0] $end
$var wire 9 - fine_sca1_btm [8:0] $end
$var wire 1 . eoc $end
$var wire 1 / cmp_clk $end
$var reg 1 0 clk $end
$var reg 1 1 cmp_out $end
$var reg 1 2 cnvst $end
$var reg 1 3 rst $end
$scope module test $end
$var wire 1 0 clk $end
$var wire 1 1 cmp_out $end
$var wire 1 2 cnvst $end
$var wire 9 4 fine_sca1_btm_not [8:0] $end
$var wire 9 5 fine_sca1_top_not [8:0] $end
$var wire 9 6 fine_sca2_btm_not [8:0] $end
$var wire 9 7 fine_sca2_top_not [8:0] $end
$var wire 1 $ fine_switch_S_not $end
$var wire 1 3 rst $end
$var wire 1 " s_clk_not $end
$var reg 4 8 b_coarse [3:0] $end
$var reg 4 9 b_fine [3:0] $end
$var reg 1 : bndset $end
$var reg 1 / cmp_clk $end
$var reg 1 . eoc $end
$var reg 9 ; fine_sca1_btm [8:0] $end
$var reg 9 < fine_sca1_top [8:0] $end
$var reg 9 = fine_sca1_top_wait [8:0] $end
$var reg 9 > fine_sca2_btm [8:0] $end
$var reg 9 ? fine_sca2_top [8:0] $end
$var reg 9 @ fine_sca2_top_wait [8:0] $end
$var reg 1 % fine_switch_S $end
$var reg 1 A fine_up $end
$var reg 1 # s_clk $end
$var reg 8 B sar [7:0] $end
$var reg 4 C state [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx C
bx B
xA
bx @
bx ?
bx >
bx =
bx <
bx ;
x:
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
13
02
01
00
x/
x.
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
x%
x$
1#
0"
bx !
$end
#50
1$
b11111 (
b11111 6
b0 &
b0 7
b11111 ,
b11111 4
b0 *
b0 5
b0 C
0.
1:
b0 8
b0 9
0/
0A
b0 !
b0 B
0%
b111100000 )
b111100000 >
b111111111 '
b111111111 ?
b111100000 -
b111100000 ;
b111111111 +
b111111111 <
10
#100
00
#150
10
#200
00
#250
10
#300
00
12
03
#350
1"
0#
b111111111 (
b111111111 6
b0 @
b0 =
b0 )
b0 >
b10000000 !
b10000000 B
b11 9
b11 8
b1 C
10
#400
00
#450
b10 C
1/
10
#500
00
02
#550
b100011111 ,
b100011111 4
b11100000 -
b11100000 ;
b1000000 !
b1000000 B
0/
b10 8
b1 C
10
#600
00
#650
b10 C
1/
10
#700
00
#750
b110011111 ,
b110011111 4
b1100000 -
b1100000 ;
b100000 !
b100000 B
0/
b1 8
b1 C
10
#800
00
#850
b10 C
1/
10
#900
00
#950
b111011111 ,
b111011111 4
b100000 -
b100000 ;
b10000 !
b10000 B
0/
b0 8
b1 C
10
#1000
00
#1050
b11 C
1/
10
#1100
00
#1150
b11000 !
b11000 B
0/
0:
10
#1200
00
#1250
0$
b111111101 &
b111111101 7
b111111101 *
b111111101 5
b1 C
1%
b10 '
b10 ?
b10 +
b10 <
b10 @
b10 =
10
#1300
00
#1350
1/
b100 C
10
#1400
00
#1450
b111111001 &
b111111001 7
b1 C
b10 9
0/
b10100 !
b10100 B
b110 '
b110 ?
b100001110 @
10
#1500
00
#1550
1/
b100 C
10
#1600
00
#1650
b111100001 &
b111100001 7
b1 C
b1 9
0/
b10010 !
b10010 B
b11110 '
b11110 ?
b110011110 @
10
#1700
00
#1750
1/
b100 C
10
#1800
00
#1850
b1 &
b1 7
b1 C
b0 9
0/
b10001 !
b10001 B
b111111110 '
b111111110 ?
b111111110 @
10
#1900
00
#1950
1/
b100 C
10
#2000
00
#2050
0"
1#
b0 C
1.
0/
b10000 !
b10000 B
10
#2100
00
#2150
1$
b0 &
b0 7
b11111 ,
b11111 4
b0 *
b0 5
b0 @
b0 =
0%
b111111111 '
b111111111 ?
b111100000 -
b111100000 ;
b111111111 +
b111111111 <
b10010000 !
b10010000 B
b11 9
b11 8
1:
0.
10
#2200
00
#2250
10
#2300
00
#2350
10
#2400
00
#2450
10
#2500
00
#2550
10
#2600
00
#2650
10
#2700
00
#2750
10
#2800
00
#2850
10
#2900
00
#2950
10
#3000
00
#3050
10
#3100
00
#3150
10
#3200
00
#3250
10
#3300
00
#3350
10
#3400
00
#3450
10
#3500
00
