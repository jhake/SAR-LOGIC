$date
	Fri Mar 09 14:17:10 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module sar_logic_CS_10bit_tb $end
$var wire 10 ! sar [9:0] $end
$var wire 1 " s_clk_not $end
$var wire 1 # s_clk $end
$var wire 1 $ fine_switch_drain_not $end
$var wire 1 % fine_switch_drain $end
$var wire 20 & fine_btm_not [19:0] $end
$var wire 20 ' fine_btm [19:0] $end
$var wire 1 ( eoc $end
$var wire 1 ) cmp_clk $end
$var reg 1 * clk $end
$var reg 1 + cmp_out $end
$var reg 1 , cnvst $end
$var reg 1 - rst $end
$scope module test $end
$var wire 1 * clk $end
$var wire 1 + cmp_out $end
$var wire 1 , cnvst $end
$var wire 20 . fine_btm_not [19:0] $end
$var wire 1 $ fine_switch_drain_not $end
$var wire 1 - rst $end
$var wire 1 " s_clk_not $end
$var reg 4 / b [3:0] $end
$var reg 1 ) cmp_clk $end
$var reg 2 0 drain [1:0] $end
$var reg 1 ( eoc $end
$var reg 20 1 fine_btm [19:0] $end
$var reg 1 % fine_switch_drain $end
$var reg 1 # s_clk $end
$var reg 10 2 sar [9:0] $end
$var reg 3 3 state [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
bx /
bx .
1-
0,
1+
0*
x)
x(
bx '
bx &
x%
x$
1#
0"
bx !
$end
#50
1$
b11111111111111111111 &
b11111111111111111111 .
b0 3
0(
b0 /
0)
b1 0
b0 !
b0 2
0%
b0 '
b0 1
1*
#100
0*
#150
1*
#200
0*
#250
1*
#300
0*
1,
0-
#350
1"
0#
b1000000000 !
b1000000000 2
b10 0
b1001 /
b1 3
1*
#400
0*
#450
0$
b1 0
1%
1*
#500
0*
#550
1$
0%
b0 0
1*
#600
0*
#650
b1111111111 &
b1111111111 .
b10 3
b11111111110000000000 '
b11111111110000000000 1
1*
#700
0*
#750
1)
b11 3
1*
#800
0*
#850
b111111111 &
b111111111 .
b10 3
b1000 /
0)
b1100000000 !
b1100000000 2
b11111111111000000000 '
b11111111111000000000 1
1*
#900
0*
#950
1)
b11 3
1*
#1000
0*
#1050
b11111111 &
b11111111 .
b10 3
b111 /
0)
b1110000000 !
b1110000000 2
b11111111111100000000 '
b11111111111100000000 1
1*
#1100
0*
#1150
1)
b11 3
1*
#1200
0*
#1250
b1111111 &
b1111111 .
b10 3
b110 /
0)
b1111000000 !
b1111000000 2
b11111111111110000000 '
b11111111111110000000 1
1*
#1300
0*
#1350
1)
b11 3
1*
#1400
0*
#1450
b111111 &
b111111 .
b10 3
b101 /
0)
b1111100000 !
b1111100000 2
b11111111111111000000 '
b11111111111111000000 1
1*
#1500
0*
#1550
1)
b11 3
1*
#1600
0*
#1650
b11111 &
b11111 .
b10 3
b100 /
0)
b1111110000 !
b1111110000 2
b11111111111111100000 '
b11111111111111100000 1
1*
#1700
0*
#1750
1)
b11 3
1*
#1800
0*
#1850
b1111 &
b1111 .
b10 3
b11 /
0)
b1111111000 !
b1111111000 2
b11111111111111110000 '
b11111111111111110000 1
1*
#1900
0*
#1950
1)
b11 3
1*
#2000
0*
#2050
b111 &
b111 .
b10 3
b10 /
0)
b1111111100 !
b1111111100 2
b11111111111111111000 '
b11111111111111111000 1
1*
#2100
0*
#2150
1)
b11 3
1*
#2200
0*
#2250
b11 &
b11 .
b10 3
b1 /
0)
b1111111110 !
b1111111110 2
b11111111111111111100 '
b11111111111111111100 1
1*
#2300
0*
#2350
1)
b11 3
1*
#2400
0*
#2450
b1 &
b1 .
b10 3
b0 /
0)
b1111111111 !
b1111111111 2
b11111111111111111110 '
b11111111111111111110 1
1*
#2500
0*
#2550
1)
b11 3
1*
#2600
0*
#2650
0"
1#
b0 &
b0 .
b0 3
1(
0)
b11111111111111111111 '
b11111111111111111111 1
1*
#2700
0*
#2750
1"
0#
b11111111111111111111 &
b11111111111111111111 .
b0 '
b0 1
b1000000000 !
b1000000000 2
b10 0
b1001 /
0(
b1 3
1*
#2800
0*
#2850
0$
b1 0
1%
1*
#2900
0*
#2950
1$
0%
b0 0
1*
#3000
0*
#3050
b1111111111 &
b1111111111 .
b10 3
b11111111110000000000 '
b11111111110000000000 1
1*
#3100
0*
#3150
1)
b11 3
1*
#3200
0*
#3250
b111111111 &
b111111111 .
b10 3
b1000 /
0)
b1100000000 !
b1100000000 2
b11111111111000000000 '
b11111111111000000000 1
1*
#3300
0*
#3350
1)
b11 3
1*
#3400
0*
#3450
b11111111 &
b11111111 .
b10 3
b111 /
0)
b1110000000 !
b1110000000 2
b11111111111100000000 '
b11111111111100000000 1
1*
#3500
0*
